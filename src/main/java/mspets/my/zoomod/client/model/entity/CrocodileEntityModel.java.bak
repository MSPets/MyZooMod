package mspets.my.zoomod.client.model;


import com.mojang.blaze3d.matrix.MatrixStack;
import com.mojang.blaze3d.vertex.IVertexBuilder;
import mspets.my.zoomod.common.entity.CrocodileEntity;
import mspets.my.zoomod.common.entity.PandaEntity;
import net.minecraft.client.renderer.entity.model.EntityModel;
import net.minecraft.client.renderer.model.ModelRenderer;
import net.minecraft.entity.Entity;

public class CrocodileEntityModel <T extends CrocodileEntity> extends EntityModel<T> {
	private final ModelRenderer Body;
	private final ModelRenderer Head;
	private final ModelRenderer FrontLegs;
	private final ModelRenderer FrontRight;
	private final ModelRenderer FrontLeft;
	private final ModelRenderer BackLegs;
	private final ModelRenderer BackRight;
	private final ModelRenderer BackLeft;
	private final ModelRenderer Tail;
	private final ModelRenderer Tail2;
	private final ModelRenderer Tail3;

	public CrocodileEntityModel() {
		textureWidth = 160;
		textureHeight = 160;

		Body = new ModelRenderer(this);
		Body.setRotationPoint(0.0F, 15.0F, 0.0F);
		Body.setTextureOffset(0, 0).addBox(-8.0F, -5.0F, -25.0F, 16.0F, 10.0F, 50.0F, 0.0F, false);

		Head = new ModelRenderer(this);
		Head.setRotationPoint(0.0F, 12.0F, -5.0F);
		Body.addChild(Head);
		Head.setTextureOffset(0, 60).addBox(-7.0F, -16.0F, -40.0F, 14.0F, 8.0F, 20.0F, 0.0F, false);

		FrontLegs = new ModelRenderer(this);
		FrontLegs.setRotationPoint(0.0F, 12.0F, -5.0F);
		Body.addChild(FrontLegs);
		

		FrontRight = new ModelRenderer(this);
		FrontRight.setRotationPoint(0.0F, 0.0F, 0.0F);
		FrontLegs.addChild(FrontRight);
		FrontRight.setTextureOffset(24, 26).addBox(8.0F, -11.0F, -19.0F, 3.0F, 8.0F, 4.0F, 0.0F, false);

		FrontLeft = new ModelRenderer(this);
		FrontLeft.setRotationPoint(0.0F, 0.0F, 0.0F);
		FrontLegs.addChild(FrontLeft);
		FrontLeft.setTextureOffset(0, 0).addBox(-11.0F, -11.0F, -19.0F, 3.0F, 8.0F, 4.0F, 0.0F, false);

		BackLegs = new ModelRenderer(this);
		BackLegs.setRotationPoint(0.0F, 12.0F, -5.0F);
		Body.addChild(BackLegs);
		

		BackRight = new ModelRenderer(this);
		BackRight.setRotationPoint(0.0F, 0.0F, 0.0F);
		BackLegs.addChild(BackRight);
		BackRight.setTextureOffset(0, 18).addBox(8.0F, -11.0F, 25.0F, 3.0F, 8.0F, 4.0F, 0.0F, false);

		BackLeft = new ModelRenderer(this);
		BackLeft.setRotationPoint(0.0F, 0.0F, 0.0F);
		BackLegs.addChild(BackLeft);
		BackLeft.setTextureOffset(14, 18).addBox(-11.0F, -11.0F, 25.0F, 3.0F, 8.0F, 4.0F, 0.0F, false);

		Tail = new ModelRenderer(this);
		Tail.setRotationPoint(0.0F, 12.0F, -5.0F);
		Body.addChild(Tail);
		Tail.setTextureOffset(68, 60).addBox(-6.0F, -15.0F, 30.0F, 12.0F, 6.0F, 16.0F, 0.0F, false);

		Tail2 = new ModelRenderer(this);
		Tail2.setRotationPoint(0.0F, 0.0F, 0.0F);
		Tail.addChild(Tail2);
		Tail2.setTextureOffset(82, 0).addBox(-5.0F, -14.0F, 46.0F, 10.0F, 4.0F, 16.0F, 0.0F, false);

		Tail3 = new ModelRenderer(this);
		Tail3.setRotationPoint(0.0F, 0.0F, 0.0F);
		Tail2.addChild(Tail3);
		Tail3.setTextureOffset(0, 0).addBox(-4.0F, -13.0F, 62.0F, 8.0F, 2.0F, 16.0F, 0.0F, false);
	}

	@Override
	public void setRotationAngles(T entityIn, float limbSwing, float limbSwingAmount, float ageInTicks, float netHeadYaw, float headPitch) {
		//previously the render function, render code was moved to a method below

	}
	@Override
	public void render(MatrixStack matrixStack, IVertexBuilder buffer, int packedLight, int packedOverlay, float red, float green, float blue, float alpha){
		Body.render(matrixStack, buffer, packedLight, packedOverlay);
	}

	public void setRotationAngle(ModelRenderer modelRenderer, float x, float y, float z) {
		modelRenderer.rotateAngleX = x;
		modelRenderer.rotateAngleY = y;
		modelRenderer.rotateAngleZ = z;
	}
}